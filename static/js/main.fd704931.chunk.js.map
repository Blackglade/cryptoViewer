{"version":3,"sources":["components/sparkline.js","components/card.js","App.js","hooks/useIntersectionObserver.js","index.js"],"names":["roundMinutes","date","setHours","getHours","Math","round","getMinutes","setMinutes","Sparkline","width","height","data","up","interactive","canvas","useRef","tip","points","tooltip","e","mouse","x","y","rect","current","getBoundingClientRect","mosPos","clientX","clientY","tipCanvas","tipCtx","getContext","hit","i","length","point","abs","style","display","font","left","top","fillStyle","clearRect","fillText","price","toFixed","Date","time","dateText","toLocaleString","month","getDate","useEffect","ctx","max","min","xstep","hours","push","window","devicePixelRatio","scale","beginPath","strokeStyle","moveTo","lineTo","stroke","forEach","arc","PI","fill","drawLine","onMouseMove","background","marginTop","zIndex","ref","position","StyledCard","styled","div","props","clicked","StyledCurrency","StyledVolume","StyledPrice","groupCount","arr","res","Card","name","symbol","supply","image","change","sparkline","useState","toggle","setToggle","onClick","src","alt","flexDirection","className","toUpperCase","fontWeight","textTransform","whiteSpace","fontSize","color","App","useInfiniteQuery","a","pageParam","fetch","json","getNextPageParam","lastPage","pages","refetchInterval","isSuccess","fetchNextPage","loader","React","root","target","onIntersect","threshold","rootMargin","enabled","observer","IntersectionObserver","entries","entry","isIntersecting","el","observe","unobserve","useIntersectionObserver","margin","overflowY","map","group","Fragment","coin","current_price","price_change_percentage_24h","sparkline_in_7d","circulating_supply","id","queryClient","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","client","initialIsOpen","document","getElementById"],"mappings":"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","file":"static/js/main.fd704931.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nfunction roundMinutes(date) {\n    date.setHours(date.getHours() + Math.round(date.getMinutes()/60));\n    date.setMinutes(0, 0, 0);\n    return date;\n}\n\nexport default function Sparkline({width, height, data, up, interactive}){\n    const canvas = useRef(null);\n    const tip = useRef(null);\n    let points = [];\n\n\t// This function could probably be optimized to account for data at the edge of the bounds.\n    const drawLine = (data, up) => {\n\t\tlet ctx = canvas.current.getContext('2d');\n\t\tlet height = canvas.current.height, width = canvas.current.width;\n\t\tlet max = Math.max(...data), min = Math.min(...data);\n\t\tlet xstep = width/data.length;\n\t\tlet x = 0, y = height;\n\t\t\n\t\tlet hours = 168;\n\t\t\n\t\tif(interactive){\n\t\t\tlet date = roundMinutes(new Date());\n\t\t\tdate.setHours(date.getHours() - hours)\n\n\t\t\tpoints.push([{\n\t\t\t\tx: x, \n\t\t\t\ty: y,\n\t\t\t\tprice: data[0],\n\t\t\t\tdate: date\n\t\t\t}])\n\t\t\thours -= 12\n\t\t}\n\n\t\tif (window.devicePixelRatio) {\n\t\t\tcanvas.current.width = canvas.current.width * window.devicePixelRatio;\n\t\t\tcanvas.current.height = canvas.current.height * window.devicePixelRatio;\n\t\t\tcanvas.current.style.width = (canvas.current.width / window.devicePixelRatio) + 'px';\n\t\t\tcanvas.current.style.height = (canvas.current.height / window.devicePixelRatio) + 'px';\n\t\t\tcanvas.current.style.display = 'inline-block';\n\t\t\tctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n\t\t}\n\t\tctx.clearRect(0, 0, width, height);\n\t\tctx.beginPath();\n\t\tctx.strokeStyle = up ? 'rgb(46, 174, 52)' : 'rgb(249, 103, 45)';\n\t\tctx.moveTo(x, y);\n\t\tfor (let i = 1; i < data.length; i++) {\n\t\t\tx = x + xstep;\n\t\t\t// normalize y height\n\t\t\ty = height - ((data[i] - min) /( max - min)*height)\n\t\t\tctx.lineTo(x, y);\n\n\t\t\tif(interactive){\n\t\t\t\tlet date = roundMinutes(new Date());\n\t\t\t\tdate.setHours(date.getHours() - hours)\n\t\t\t\thours -= 12;\n\n\t\t\t\tpoints.push({x: x, y: y, data: { \n\t\t\t\t\tprice: data[i], \n\t\t\t\t\ttime: date \n\t\t\t\t}})\n\t\t\t}\n\t\t}\n\t\tctx.stroke();\n\n\t\tif(interactive){\n\t\t\tpoints.forEach(point => {\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.fillStyle = up ? 'rgba(46, 174, 52, 0.8)' : 'rgba(249, 103, 45, 0.8)';\n\t\t\t\tctx.arc(point.x, point.y, 5, 0, Math.PI*2);\n\t\t\t\tctx.fill();\n\t\t\t})\n\t\t}\n    }\n\n\tfunction mosPos(x, y) {\n\t\tlet rect = canvas.current.getBoundingClientRect();\n\t\treturn {\n\t\t\tx: x - rect.x,\n\t\t\ty: y - rect.y\n\t\t}\n\t  }\n\n    const tooltip = (e) => {\n\t\tlet mouse = mosPos(e.clientX, e.clientY);\n\n\t\tlet tipCanvas = tip.current;\n\t\tlet tipCtx = tipCanvas.getContext('2d');\n\n\t\tlet hit = false;\n\t\tfor (let i = 0; i < points.length; i++) {\n\t\t\tlet point = points[i];\n\t\t\tlet dx = Math.abs(mouse.x - point.x);\n\t\t\tlet dy = Math.abs(mouse.y - point.y);\n\n\t\t\tif(dx + dy < 25){\n\t\t\t\ttipCanvas.style.display = 'block';\n\t\t\t\ttipCtx.font = '10px Lato'\n\t\t\t\ttipCanvas.style.left = (point.x) + \"px\";\n\t\t\t\ttipCanvas.style.top = (point.y + 15) + \"px\";\n\t\t\t\ttipCtx.fillStyle = \"white\";\n\t\t\t\ttipCtx.clearRect(0, 0, tipCanvas.width, tipCanvas.height);\n\t\t\t\ttipCtx.fillText('$' + point.data.price.toFixed(2), 5, 15);\n\t\t\t\tlet date = new Date(point.data.time)\n\t\t\t\tlet dateText = date.toLocaleString('default', { month: 'short' }) + ' ' + date.getDate() + ', ' + date.getHours() + ':00'\n\t\t\t\ttipCtx.fillText(dateText, 5, 30);\n\t\t\t\thit = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!hit) { tipCanvas.style.display = 'none'; }\n    }\n    \n    useEffect(() => {\n        drawLine(data, up);\n    }, [])\n\n\t// To-Do: Adding animation so on show/hide.\n    return(\n        <>\n        <canvas onMouseMove={(e) => interactive && tooltip(e)} style={{background: interactive && 'rgb(38, 53, 67)', marginTop: interactive && '-4px', zIndex: '1'}} ref={canvas} width={width} height={height}>\n            Your browser does not support the HTML5 canvas tag.\n        </canvas>\n\t\t{interactive && <canvas style={{background: 'rgb(18, 29, 39)', display: 'none', zIndex: '2', position: 'absolute'}} ref={tip} width=\"75\" height=\"40\">\n            Your browser does not support the HTML5 canvas tag.</canvas>}\n        </>\n    )\n}","import React, { useState } from 'react';\nimport styled from '@emotion/styled'\n\nimport Sparkline from './sparkline'\n\nconst StyledCard = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    height: 45px;\n    margin-bottom: 4px;\n    padding: 4px 10px;\n    background: ${props => props.clicked ? 'rgb(38, 53, 67)' : 'rgb(18, 29, 39)'};\n    cursor: pointer;\n\n    img { \n        width: 1.5rem; \n        margin-right: 8px;\n    }\n\n    &:hover {\n        background: rgb(38, 53, 67);\n    }\n`\n\nconst StyledCurrency = styled.div`\n    display: flex;\n    align-items: center;\n    flex-direction: row;\n    width: 135px;\n`\n\nconst StyledVolume = styled.div`\n    display: flex;\n    align-items: flex-end;\n    flex-direction: column;\n    width: 120px;\n    text-align: right;\n`\n\nconst StyledPrice = styled.div`\n    display: flex;\n    align-items: flex-end;\n    flex-direction: column;\n    width: 95px;\n`\n// Average every 12 hours for larger graph.\nconst groupCount = (arr = []) => {\n    const res = [];\n    for (let i = 0; i < arr.length;) {\n       res.push(arr[i]);\n       i += 12;\n    }\n    return res\n }\n\nexport default function Card({name, symbol, supply, image, price, change, sparkline}){\n    const [toggle, setToggle] = useState(false);\n    return(\n        <section style={{position: 'relative'}}>\n            <StyledCard onClick={() => setToggle(!toggle)} clicked={toggle}>\n                <StyledCurrency>\n                    <img src={image} alt={name} />\n                    <div style={{display: 'flex', flexDirection: 'column'}}>\n                        <span className=\"productText\">{symbol.toUpperCase()}-USD</span>\n                        <span className=\"nameText\">{name}</span>\n                    </div>\n                </StyledCurrency>\n                <div style={{width: '60px', height: '20px'}}>\n                    <Sparkline width='60px' height='20px' data={sparkline} up={change > 0} interactive={false} />\n                </div>\n                <StyledVolume>\n                    <span className=\"productText\" style={{fontWeight: 'normal', textTransform: 'inherit', whiteSpace: 'nowrap'}}>{Math.round(supply) + ' '}{symbol.toUpperCase()}</span>\n                    <span className=\"nameText\" style={{fontSize: '11px', color: 'rgba(138, 147, 159, 0.4)'}}>Total Supply</span>\n                </StyledVolume>\n                <StyledPrice>\n                    <span className=\"productText\" style={{fontWeight: 'normal', textTransform: 'inherit', whiteSpace: 'nowrap'}}>${price}</span>\n                    <span className=\"nameText\" style={{fontSize: '11px', color: change > 0 ? 'rgb(46, 174, 52)' : 'rgb(249, 103, 45)', whiteSpace: 'nowrap', textTransform: 'inherit'}}>{change > 0 && '+'}{change}%</span>\n                </StyledPrice>\n                \n            </StyledCard>\n            {toggle && <Sparkline width='500px' height='175px' data={groupCount(sparkline)} up={change > 0} interactive={true} />}\n        </section>\n    )\n}","import React from 'react';\nimport { useInfiniteQuery } from 'react-query'\nimport useIntersectionObserver from './hooks/useIntersectionObserver'\n\nimport Card from './components/card'\n\nexport default function App(){\n\n    const { isSuccess, data, fetchNextPage } = useInfiniteQuery('cards', async ({pageParam = 1}) => {\n        const res = await fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=30&sparkline=true&page=' + pageParam);\n        return res.json();\n    }, {\n        getNextPageParam: (lastPage, pages) => pages.length + 1,\n        refetchInterval: 15000,\n    })\n\n    const loader = React.useRef()\n\n    useIntersectionObserver({\n        target: loader,\n        onIntersect: fetchNextPage,\n    })\n\n    return(\n        <div style={{margin: '1rem'}}>\n            <h1>USD Markets 📈📉🔥🚀</h1>\n            <div style={{display: 'flex', flexDirection: 'column', width: '500px', overflowY: 'auto', height: '600px'}}>\n                {isSuccess && data.pages.map((group, i) => \n                <React.Fragment key={i}>\n                    {group.map((coin) => \n                        <Card key={coin.id} name={coin.name} symbol={coin.symbol} image={coin.image} price={coin.current_price} change={Math.round(coin.price_change_percentage_24h * 100) / 100} sparkline={coin.sparkline_in_7d.price} supply={coin.circulating_supply} />\n                    )}\n                </React.Fragment>\n                )}\n                <div ref={loader} className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\n            </div>\n        </div>\n    )\n}","import { useEffect } from 'react'\n\nexport default function useIntersectionObserver({root, target, onIntersect, threshold = 1.0, rootMargin = '0px', enabled = true}){\n\tuseEffect(() => {\n\t\tif (!enabled) return;\n\n\t\tconst observer = new IntersectionObserver(\n\t\t\tentries => entries.forEach(entry => entry.isIntersecting && onIntersect()),\n\t\t\t{ root: root && root.current, rootMargin, threshold, }\n\t\t)\n\n\t\tconst el = target && target.current\n\t\tif (!el) return;\n\n\t\tobserver.observe(el)\n\t\treturn () => { observer.unobserve(el) }\n\n\t}, [target.current, enabled])\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { QueryClient, QueryClientProvider } from 'react-query'\nimport { ReactQueryDevtools } from 'react-query/devtools'\n\nimport './index.css'\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n      <ReactQueryDevtools initialIsOpen={false} />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}